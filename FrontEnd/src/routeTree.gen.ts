/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TypeLazyImport = createFileRoute('/type')()
const TransmissionsLazyImport = createFileRoute('/transmissions')()
const RegisterLazyImport = createFileRoute('/register')()
const ProfileLazyImport = createFileRoute('/profile')()
const LoginLazyImport = createFileRoute('/login')()
const FuelsLazyImport = createFileRoute('/fuels')()
const IndexLazyImport = createFileRoute('/')()
const TypesCreateLazyImport = createFileRoute('/types/create')()
const TransmissionsCreateLazyImport = createFileRoute('/transmissions/create')()
const ManufactureRefreshLazyImport = createFileRoute('/manufacture/refresh')()
const ManufactureCreateLazyImport = createFileRoute('/manufacture/create')()
const FuelsCreateLazyImport = createFileRoute('/fuels/create')()
const TransmissionsEditIdLazyImport = createFileRoute(
  '/transmissions/edit/$id',
)()
const ManufactureEditIdLazyImport = createFileRoute('/manufacture/edit/$id')()
const FuelsEditIdLazyImport = createFileRoute('/fuels/edit/$id')()

// Create/Update Routes

const TypeLazyRoute = TypeLazyImport.update({
  id: '/type',
  path: '/type',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/type.lazy').then((d) => d.Route))

const TransmissionsLazyRoute = TransmissionsLazyImport.update({
  id: '/transmissions',
  path: '/transmissions',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/transmissions.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const FuelsLazyRoute = FuelsLazyImport.update({
  id: '/fuels',
  path: '/fuels',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/fuels.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TypesCreateLazyRoute = TypesCreateLazyImport.update({
  id: '/types/create',
  path: '/types/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/types/create.lazy').then((d) => d.Route))

const TransmissionsCreateLazyRoute = TransmissionsCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => TransmissionsLazyRoute,
} as any).lazy(() =>
  import('./routes/transmissions/create.lazy').then((d) => d.Route),
)

const ManufactureRefreshLazyRoute = ManufactureRefreshLazyImport.update({
  id: '/manufacture/refresh',
  path: '/manufacture/refresh',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/manufacture/refresh.lazy').then((d) => d.Route),
)

const ManufactureCreateLazyRoute = ManufactureCreateLazyImport.update({
  id: '/manufacture/create',
  path: '/manufacture/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/manufacture/create.lazy').then((d) => d.Route),
)

const FuelsCreateLazyRoute = FuelsCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => FuelsLazyRoute,
} as any).lazy(() => import('./routes/fuels/create.lazy').then((d) => d.Route))

const TransmissionsEditIdLazyRoute = TransmissionsEditIdLazyImport.update({
  id: '/edit/$id',
  path: '/edit/$id',
  getParentRoute: () => TransmissionsLazyRoute,
} as any).lazy(() =>
  import('./routes/transmissions/edit/$id.lazy').then((d) => d.Route),
)

const ManufactureEditIdLazyRoute = ManufactureEditIdLazyImport.update({
  id: '/manufacture/edit/$id',
  path: '/manufacture/edit/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/manufacture/edit/$id.lazy').then((d) => d.Route),
)

const FuelsEditIdLazyRoute = FuelsEditIdLazyImport.update({
  id: '/edit/$id',
  path: '/edit/$id',
  getParentRoute: () => FuelsLazyRoute,
} as any).lazy(() =>
  import('./routes/fuels/edit/$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/fuels': {
      id: '/fuels'
      path: '/fuels'
      fullPath: '/fuels'
      preLoaderRoute: typeof FuelsLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/transmissions': {
      id: '/transmissions'
      path: '/transmissions'
      fullPath: '/transmissions'
      preLoaderRoute: typeof TransmissionsLazyImport
      parentRoute: typeof rootRoute
    }
    '/type': {
      id: '/type'
      path: '/type'
      fullPath: '/type'
      preLoaderRoute: typeof TypeLazyImport
      parentRoute: typeof rootRoute
    }
    '/fuels/create': {
      id: '/fuels/create'
      path: '/create'
      fullPath: '/fuels/create'
      preLoaderRoute: typeof FuelsCreateLazyImport
      parentRoute: typeof FuelsLazyImport
    }
    '/manufacture/create': {
      id: '/manufacture/create'
      path: '/manufacture/create'
      fullPath: '/manufacture/create'
      preLoaderRoute: typeof ManufactureCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/manufacture/refresh': {
      id: '/manufacture/refresh'
      path: '/manufacture/refresh'
      fullPath: '/manufacture/refresh'
      preLoaderRoute: typeof ManufactureRefreshLazyImport
      parentRoute: typeof rootRoute
    }
    '/transmissions/create': {
      id: '/transmissions/create'
      path: '/create'
      fullPath: '/transmissions/create'
      preLoaderRoute: typeof TransmissionsCreateLazyImport
      parentRoute: typeof TransmissionsLazyImport
    }
    '/types/create': {
      id: '/types/create'
      path: '/types/create'
      fullPath: '/types/create'
      preLoaderRoute: typeof TypesCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/fuels/edit/$id': {
      id: '/fuels/edit/$id'
      path: '/edit/$id'
      fullPath: '/fuels/edit/$id'
      preLoaderRoute: typeof FuelsEditIdLazyImport
      parentRoute: typeof FuelsLazyImport
    }
    '/manufacture/edit/$id': {
      id: '/manufacture/edit/$id'
      path: '/manufacture/edit/$id'
      fullPath: '/manufacture/edit/$id'
      preLoaderRoute: typeof ManufactureEditIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/transmissions/edit/$id': {
      id: '/transmissions/edit/$id'
      path: '/edit/$id'
      fullPath: '/transmissions/edit/$id'
      preLoaderRoute: typeof TransmissionsEditIdLazyImport
      parentRoute: typeof TransmissionsLazyImport
    }
  }
}

// Create and export the route tree

interface FuelsLazyRouteChildren {
  FuelsCreateLazyRoute: typeof FuelsCreateLazyRoute
  FuelsEditIdLazyRoute: typeof FuelsEditIdLazyRoute
}

const FuelsLazyRouteChildren: FuelsLazyRouteChildren = {
  FuelsCreateLazyRoute: FuelsCreateLazyRoute,
  FuelsEditIdLazyRoute: FuelsEditIdLazyRoute,
}

const FuelsLazyRouteWithChildren = FuelsLazyRoute._addFileChildren(
  FuelsLazyRouteChildren,
)

interface TransmissionsLazyRouteChildren {
  TransmissionsCreateLazyRoute: typeof TransmissionsCreateLazyRoute
  TransmissionsEditIdLazyRoute: typeof TransmissionsEditIdLazyRoute
}

const TransmissionsLazyRouteChildren: TransmissionsLazyRouteChildren = {
  TransmissionsCreateLazyRoute: TransmissionsCreateLazyRoute,
  TransmissionsEditIdLazyRoute: TransmissionsEditIdLazyRoute,
}

const TransmissionsLazyRouteWithChildren =
  TransmissionsLazyRoute._addFileChildren(TransmissionsLazyRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/fuels': typeof FuelsLazyRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/transmissions': typeof TransmissionsLazyRouteWithChildren
  '/type': typeof TypeLazyRoute
  '/fuels/create': typeof FuelsCreateLazyRoute
  '/manufacture/create': typeof ManufactureCreateLazyRoute
  '/manufacture/refresh': typeof ManufactureRefreshLazyRoute
  '/transmissions/create': typeof TransmissionsCreateLazyRoute
  '/types/create': typeof TypesCreateLazyRoute
  '/fuels/edit/$id': typeof FuelsEditIdLazyRoute
  '/manufacture/edit/$id': typeof ManufactureEditIdLazyRoute
  '/transmissions/edit/$id': typeof TransmissionsEditIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/fuels': typeof FuelsLazyRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/transmissions': typeof TransmissionsLazyRouteWithChildren
  '/type': typeof TypeLazyRoute
  '/fuels/create': typeof FuelsCreateLazyRoute
  '/manufacture/create': typeof ManufactureCreateLazyRoute
  '/manufacture/refresh': typeof ManufactureRefreshLazyRoute
  '/transmissions/create': typeof TransmissionsCreateLazyRoute
  '/types/create': typeof TypesCreateLazyRoute
  '/fuels/edit/$id': typeof FuelsEditIdLazyRoute
  '/manufacture/edit/$id': typeof ManufactureEditIdLazyRoute
  '/transmissions/edit/$id': typeof TransmissionsEditIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/fuels': typeof FuelsLazyRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/transmissions': typeof TransmissionsLazyRouteWithChildren
  '/type': typeof TypeLazyRoute
  '/fuels/create': typeof FuelsCreateLazyRoute
  '/manufacture/create': typeof ManufactureCreateLazyRoute
  '/manufacture/refresh': typeof ManufactureRefreshLazyRoute
  '/transmissions/create': typeof TransmissionsCreateLazyRoute
  '/types/create': typeof TypesCreateLazyRoute
  '/fuels/edit/$id': typeof FuelsEditIdLazyRoute
  '/manufacture/edit/$id': typeof ManufactureEditIdLazyRoute
  '/transmissions/edit/$id': typeof TransmissionsEditIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/fuels'
    | '/login'
    | '/profile'
    | '/register'
    | '/transmissions'
    | '/type'
    | '/fuels/create'
    | '/manufacture/create'
    | '/manufacture/refresh'
    | '/transmissions/create'
    | '/types/create'
    | '/fuels/edit/$id'
    | '/manufacture/edit/$id'
    | '/transmissions/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/fuels'
    | '/login'
    | '/profile'
    | '/register'
    | '/transmissions'
    | '/type'
    | '/fuels/create'
    | '/manufacture/create'
    | '/manufacture/refresh'
    | '/transmissions/create'
    | '/types/create'
    | '/fuels/edit/$id'
    | '/manufacture/edit/$id'
    | '/transmissions/edit/$id'
  id:
    | '__root__'
    | '/'
    | '/fuels'
    | '/login'
    | '/profile'
    | '/register'
    | '/transmissions'
    | '/type'
    | '/fuels/create'
    | '/manufacture/create'
    | '/manufacture/refresh'
    | '/transmissions/create'
    | '/types/create'
    | '/fuels/edit/$id'
    | '/manufacture/edit/$id'
    | '/transmissions/edit/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  FuelsLazyRoute: typeof FuelsLazyRouteWithChildren
  LoginLazyRoute: typeof LoginLazyRoute
  ProfileLazyRoute: typeof ProfileLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
  TransmissionsLazyRoute: typeof TransmissionsLazyRouteWithChildren
  TypeLazyRoute: typeof TypeLazyRoute
  ManufactureCreateLazyRoute: typeof ManufactureCreateLazyRoute
  ManufactureRefreshLazyRoute: typeof ManufactureRefreshLazyRoute
  TypesCreateLazyRoute: typeof TypesCreateLazyRoute
  ManufactureEditIdLazyRoute: typeof ManufactureEditIdLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  FuelsLazyRoute: FuelsLazyRouteWithChildren,
  LoginLazyRoute: LoginLazyRoute,
  ProfileLazyRoute: ProfileLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
  TransmissionsLazyRoute: TransmissionsLazyRouteWithChildren,
  TypeLazyRoute: TypeLazyRoute,
  ManufactureCreateLazyRoute: ManufactureCreateLazyRoute,
  ManufactureRefreshLazyRoute: ManufactureRefreshLazyRoute,
  TypesCreateLazyRoute: TypesCreateLazyRoute,
  ManufactureEditIdLazyRoute: ManufactureEditIdLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/fuels",
        "/login",
        "/profile",
        "/register",
        "/transmissions",
        "/type",
        "/manufacture/create",
        "/manufacture/refresh",
        "/types/create",
        "/manufacture/edit/$id"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/fuels": {
      "filePath": "fuels.lazy.jsx",
      "children": [
        "/fuels/create",
        "/fuels/edit/$id"
      ]
    },
    "/login": {
      "filePath": "login.lazy.jsx"
    },
    "/profile": {
      "filePath": "profile.lazy.jsx"
    },
    "/register": {
      "filePath": "register.lazy.jsx"
    },
    "/transmissions": {
      "filePath": "transmissions.lazy.jsx",
      "children": [
        "/transmissions/create",
        "/transmissions/edit/$id"
      ]
    },
    "/type": {
      "filePath": "type.lazy.jsx"
    },
    "/fuels/create": {
      "filePath": "fuels/create.lazy.jsx",
      "parent": "/fuels"
    },
    "/manufacture/create": {
      "filePath": "manufacture/create.lazy.jsx"
    },
    "/manufacture/refresh": {
      "filePath": "manufacture/refresh.lazy.jsx"
    },
    "/transmissions/create": {
      "filePath": "transmissions/create.lazy.jsx",
      "parent": "/transmissions"
    },
    "/types/create": {
      "filePath": "types/create.lazy.jsx"
    },
    "/fuels/edit/$id": {
      "filePath": "fuels/edit/$id.lazy.jsx",
      "parent": "/fuels"
    },
    "/manufacture/edit/$id": {
      "filePath": "manufacture/edit/$id.lazy.jsx"
    },
    "/transmissions/edit/$id": {
      "filePath": "transmissions/edit/$id.lazy.jsx",
      "parent": "/transmissions"
    }
  }
}
ROUTE_MANIFEST_END */
